# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


       
trigger:
- none

pool:
  vmImage: 'windows-latest'
  demands:- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'
   


stages:
  - stage: dev
    jobs:
      - job: dev
        steps:
           - task: TerraformInstaller@0
             inputs:
              terraformVersion: 'latest'
           - task: TerraformTaskV3@3
             inputs:
               provider: 'azurerm'
               command: 'init'
               backendServiceArm: 'einfo-terraform'
               backendAzureRmResourceGroupName: 'sa1_test_eic_DevOpslearning'
               backendAzureRmStorageAccountName: 'appstore15169477'
               backendAzureRmContainerName: 'data'
               backendAzureRmKey: 'terraform.tfstate'
           - task: TerraformTaskV3@3
             inputs:
               provider: 'azurerm'
               command: 'validate'
  - stage: prod
    dependsOn: dev
    displayName: terraform testing
    jobs:
      - job: prod
        
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'einfo-terraform'
              backendAzureRmResourceGroupName: 'sa1_test_eic_DevOpslearning'
              backendAzureRmStorageAccountName: 'appstore15169477'
              backendAzureRmContainerName: 'data'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'einfo-terraform'
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: '-auto-approve'
              environmentServiceNameAzureRM: 'einfo-terraform'
          # - task: TerraformTaskV3@3
          #   inputs:
          #     provider: 'azurerm'
          #     command: 'destroy'
          #     commandOptions: '-auto-approve'
          #     environmentServiceNameAzureRM: 'einfo-terraform'
  


      
 







